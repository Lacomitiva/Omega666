-- Ondeado_exe - HUD compacto + AutoJoin (mejorado, con debug y fallback)
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local MIN_DELAY = 0.15

-- UI compacto
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "Ondeado_exe"
local main = Instance.new("Frame", screenGui)
main.Size = UDim2.new(0, 240, 0, 320)
main.Position = UDim2.new(0.35,0,0.18,0)
main.BackgroundColor3 = Color3.fromRGB(23,23,30)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0,10)
local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1,0,0,28); title.Position = UDim2.new(0,0,0,0)
title.BackgroundTransparency = 1; title.Text = "Ondeado_exe (compact)"; title.Font = Enum.Font.GothamBold; title.TextSize = 16; title.TextColor3 = Color3.new(1,1,1)

-- AutoJoin
local autoBtn = Instance.new("TextButton", main)
autoBtn.Size = UDim2.new(1,-16,0,32); autoBtn.Position = UDim2.new(0,8,0,34)
autoBtn.BackgroundColor3 = Color3.fromRGB(40,40,55); autoBtn.Font = Enum.Font.GothamBold; autoBtn.TextSize = 13
autoBtn.TextColor3 = Color3.fromRGB(255,80,80)
autoBtn.Text = "Auto Join: OFF"

-- Min M/s
local minBox = Instance.new("TextBox", main)
minBox.Size = UDim2.new(1,-16,0,28); minBox.Position = UDim2.new(0,8,0,72)
minBox.BackgroundColor3 = Color3.fromRGB(40,40,55); minBox.Text = "1"; minBox.ClearTextOnFocus = false
minBox.Font = Enum.Font.Gotham; minBox.TextSize = 14; minBox.TextColor3 = Color3.new(1,1,1)

-- Rarity dropdown (simple)
local dropdownBtn = Instance.new("TextButton", main)
dropdownBtn.Size = UDim2.new(1,-16,0,28); dropdownBtn.Position = UDim2.new(0,8,0,108)
dropdownBtn.BackgroundColor3 = Color3.fromRGB(40,40,55); dropdownBtn.Font = Enum.Font.Gotham; dropdownBtn.TextSize = 13
local brainrotRarities = {"Common","Rare","Epic","Legendary","Mythic","Brainrot God","Secret","OG"}
local selectedRarity = brainrotRarities[1]
dropdownBtn.Text = selectedRarity

local optionsFrame = Instance.new("ScrollingFrame", main)
optionsFrame.Size = UDim2.new(1,-16,0,110); optionsFrame.Position = UDim2.new(0,8,0,144)
optionsFrame.CanvasSize = UDim2.new(0,0,0,0); optionsFrame.ScrollBarThickness = 6
optionsFrame.BackgroundColor3 = Color3.fromRGB(36,36,44); optionsFrame.Visible = false; optionsFrame.BorderSizePixel = 0
local layout = Instance.new("UIListLayout", optionsFrame); layout.Padding = UDim.new(0,4)
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    optionsFrame.CanvasSize = UDim2.new(0,0,0, layout.AbsoluteContentSize.Y + 6)
end)
for i,name in ipairs(brainrotRarities) do
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(1,-8,0,24); b.LayoutOrder = i; b.BackgroundColor3 = Color3.fromRGB(50,50,62)
    b.TextColor3 = Color3.new(1,1,1); b.Font = Enum.Font.Gotham; b.TextSize = 12; b.Text = name
    b.Parent = optionsFrame
    b.MouseButton1Click:Connect(function()
        selectedRarity = name; dropdownBtn.Text = name; optionsFrame.Visible = false
    end)
end
dropdownBtn.MouseButton1Click:Connect(function() optionsFrame.Visible = not optionsFrame.Visible end)

UserInputService.InputBegan:Connect(function(inp, processed)
    if processed then return end
    if (inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch) and optionsFrame.Visible then
        local m = UserInputService:GetMouseLocation()
        if m.X < main.AbsolutePosition.X or m.X > main.AbsolutePosition.X + main.AbsoluteSize.X or
           m.Y < main.AbsolutePosition.Y or m.Y > main.AbsolutePosition.Y + main.AbsoluteSize.Y then
            optionsFrame.Visible = false
        end
    end
end)

local statusLabel = Instance.new("TextLabel", main)
statusLabel.Size = UDim2.new(1,-16,0,28); statusLabel.Position = UDim2.new(0,8,1,-36)
statusLabel.BackgroundColor3 = Color3.fromRGB(28,28,34); statusLabel.Font = Enum.Font.Gotham; statusLabel.TextSize = 12
statusLabel.TextColor3 = Color3.fromRGB(200,200,200); statusLabel.Text = "Estado: Inactivo"

-- UTIL: safe HTTP GET
local function safeGet(url)
    local ok, body = pcall(function() return game:HttpGet(url) end)
    if not ok then return nil, "HttpGet failed" end
    return body, nil
end

-- UTIL: try invoke remote safely
local function tryCheckRare(id, rarity)
    local remote = ReplicatedStorage:FindFirstChild("CheckRaretyServer")
    if not remote then
        -- Remote no existe -> asumimos true (fallback) para permitir teletransportar
        return true, "No remote (fallback true)"
    end
    local ok, res = pcall(function()
        if remote:IsA("RemoteFunction") then
            return remote:InvokeServer(id, rarity)
        else
            if remote:IsA("RemoteEvent") then
                remote:FireServer(id, rarity)
                return true
            end
            return false
        end
    end)
    if not ok then return false, "Invoke error" end
    return res and true or false, "Invoke result: "..tostring(res)
end

-- AUTO JOIN
local autoJoinActive = false
autoBtn.MouseButton1Click:Connect(function()
    autoJoinActive = not autoJoinActive
    autoBtn.Text = "Auto Join: "..(autoJoinActive and "ON" or "OFF")
    autoBtn.TextColor3 = autoJoinActive and Color3.fromRGB(80,255,120) or Color3.fromRGB(255,80,80)
    if autoJoinActive then
        spawn(function()
            local visited = {}
            while autoJoinActive do
                wait(MIN_DELAY)
                statusLabel.Text = "Estado: Buscando servidores..."
                local minMS = tonumber(minBox.Text) or 1
                local servers = {}
                local cursor = nil
                repeat
                    local url = "https://games.roblox.com/v1/games/"..tostring(game.PlaceId).."/servers/Public?sortOrder=Asc&limit=100"..(cursor and ("&cursor="..cursor) or "")
                    local body, err = safeGet(url)
                    if not body then
                        statusLabel.Text = "Estado: Error HTTP ("..tostring(err).."), reintentando..."
                        wait(1)
                        break
                    end
                    local ok, data = pcall(function() return HttpService:JSONDecode(body) end)
                    if not ok or not data or not data.data then
                        statusLabel.Text = "Estado: Respuesta inválida, reintentando..."
                        break
                    end
                    for _, s in ipairs(data.data) do
                        local sid = tostring(s.id or s.uuid or s.joinScriptId or s.id)
                        local playing = tonumber(s.playing or s.currentPlayers or 0) or 0
                        local maxP = tonumber(s.maxPlayers or s.max or 0) or 0
                        if sid and maxP > 0 and playing < maxP and sid ~= tostring(game.JobId) and not visited[sid] then
                            table.insert(servers, {id = sid, playing = playing, maxPlayers = maxP})
                        end
                    end
                    cursor = data.nextPageCursor
                until not cursor

                table.sort(servers, function(a,b) return (a.maxPlayers - a.playing) > (b.maxPlayers - b.playing) end)

                local found
                for _, s in ipairs(servers) do
                    if s.maxPlayers - s.playing >= minMS then
                        statusLabel.Text = "Estado: Comprobando rareza en server "..s.id.."..."
                        local okCheck, msg = tryCheckRare(s.id, selectedRarity)
                        if okCheck then
                            found = s
                            break
                        end
                    end
                end

                if found then
                    statusLabel.Text = "Estado: Servidor encontrado ✅ ID:"..found.id
                    visited[found.id] = true
                    autoJoinActive = false
                    autoBtn.Text = "Auto Join: OFF"
                    autoBtn.TextColor3 = Color3.fromRGB(255,80,80)
                    local teleOk, teleErr = pcall(function()
                        TeleportService:TeleportToPlaceInstance(game.PlaceId, found.id, player)
                    end)
                    if not teleOk then
                        pcall(function()
                            TeleportService:TeleportToPlaceInstance(game.PlaceId, found.id)
                        end)
                    end
                    break
                else
                    statusLabel.Text = "Estado: No encontrado, buscando siguiente..."
                end
            end
            if not autoJoinActive then
                statusLabel.Text = "Estado: Inactivo"
            end
        end)
    else
        statusLabel.Text = "Estado: Inactivo"
    end
end)
-- Rarities dropdown
local labelBR = Instance.new("TextLabel", main)
labelBR.Position = UDim2.new(0,10,0,130)
labelBR.Size = UDim2.new(1,-20,0,18)
labelBR.BackgroundTransparency = 1
labelBR.Text = "Tipo (rarity):"
labelBR.Font = Enum.Font.Gotham
labelBR.TextSize = 12
labelBR.TextColor3 = Color3.fromRGB(230,230,230)

local brainrotRarities = {"Common","Rare","Epic","Legendary","Mythic","Brainrot God","Secret","OG"}
local selectedRarity = brainrotRarities[1]

local dropdownBtn = Instance.new("TextButton", main)
dropdownBtn.Position = UDim2.new(0,10,0,148)
dropdownBtn.Size = UDim2.new(1,-20,0,28)
dropdownBtn.BackgroundColor3 = Color3.fromRGB(40,40,55)
dropdownBtn.Text = selectedRarity
dropdownBtn.Font = Enum.Font.Gotham
dropdownBtn.TextSize = 13
dropdownBtn.TextColor3 = Color3.fromRGB(255,255,255)

local optionsFrame = Instance.new("ScrollingFrame", main)
optionsFrame.Position = UDim2.new(0,10,0,180)
optionsFrame.Size = UDim2.new(1,-20,0,120)
optionsFrame.CanvasSize = UDim2.new(0,0,0,0)
optionsFrame.ScrollBarThickness = 6
optionsFrame.BackgroundColor3 = Color3.fromRGB(36,36,44)
optionsFrame.Visible = false
optionsFrame.BorderSizePixel = 0
optionsFrame.ClipsDescendants = true
local layout = Instance.new("UIListLayout", optionsFrame)
layout.Padding = UDim.new(0,4)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    optionsFrame.CanvasSize = UDim2.new(0,0,0,layout.AbsoluteContentSize.Y + 4)
end)

for i,name in ipairs(brainrotRarities) do
    local opt = Instance.new("TextButton")
    opt.Size = UDim2.new(1,-4,0,26)
    opt.LayoutOrder = i
    opt.BackgroundColor3 = Color3.fromRGB(50,50,62)
    opt.TextColor3 = Color3.fromRGB(255,255,255)
    opt.Font = Enum.Font.Gotham
    opt.TextSize = 12
    opt.Text = name
    opt.Parent = optionsFrame
    opt.MouseButton1Click:Connect(function()
        selectedRarity = name
        dropdownBtn.Text = name
        optionsFrame.Visible = false
    end)
end

dropdownBtn.MouseButton1Click:Connect(function()
    optionsFrame.Visible = not optionsFrame.Visible
end)

UserInputService.InputBegan:Connect(function(input,processed)
    if processed then return end
    if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
        local mousePos = UserInputService:GetMouseLocation()
        if optionsFrame.Visible and (mousePos.X < main.AbsolutePosition.X or mousePos.X > main.AbsolutePosition.X+main.AbsoluteSize.X or
           mousePos.Y < main.AbsolutePosition.Y or mousePos.Y > main.AbsolutePosition.Y+main.AbsoluteSize.Y) then
            optionsFrame.Visible=false
        end
    end
end)

local statusLabel = Instance.new("TextLabel", main)
statusLabel.Position = UDim2.new(0,10,1,-40)
statusLabel.Size = UDim2.new(1,-20,0,32)
statusLabel.BackgroundColor3 = Color3.fromRGB(28,28,34)
statusLabel.Text = "Estado: Inactivo"
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12
statusLabel.TextColor3 = Color3.fromRGB(200,200,200)

-- ---------- AUTO JOIN ----------
local autoJoinActive = false

autoBtn.MouseButton1Click:Connect(function()
    autoJoinActive = not autoJoinActive
    autoBtn.Text = "Auto Join: "..(autoJoinActive and "ON" or "OFF")
    autoBtn.TextColor3 = autoJoinActive and Color3.fromRGB(80,255,120) or Color3.fromRGB(255,80,80)

    if autoJoinActive then
        spawn(function()
            local visitedSet = {}
            while autoJoinActive do
                wait(MIN_DELAY)
                local minMSVal = tonumber(minBox.Text) or 1
                local servers = {}
                local cursor
                repeat
                    local ok, body = pcall(function()
                        return game:HttpGet("https://games.roblox.com/v1/games/"..tostring(game.PlaceId).."/servers/Public?sortOrder=Asc&limit=100"..(cursor and "&cursor="..cursor or ""))
                    end)
                    if not ok then break end
                    local data = HttpService:JSONDecode(body)
                    if not data or not data.data then break end
                    for _,s in ipairs(data.data) do
                        local id = tostring(s.id)
                        if s.playing < s.maxPlayers and id~=tostring(game.JobId) and not visitedSet[id] then
                            table.insert(servers,{id=id,playing=s.playing,maxPlayers=s.maxPlayers})
                        end
                    end
                    cursor = data.nextPageCursor
                until not cursor

                local foundServer
                for _,s in ipairs(servers) do
                    if s.maxPlayers - s.playing >= minMSVal then
                        local success, hasRare = pcall(function()
                            local event = ReplicatedStorage:WaitForChild("CheckRaretyServer")
                            return event:InvokeServer(s.id, selectedRarity)
                        end)
                        if success and hasRare then
                            foundServer = s
                            break
                        end
                    end
                end

                if foundServer then
                    statusLabel.Text = "Estado: Servidor encontrado ✅ (ID:"..foundServer.id..")"
                    visitedSet[foundServer.id]=true
                    autoJoinActive=false
                    autoBtn.Text="Auto Join: OFF"
                    autoBtn.TextColor3=Color3.fromRGB(255,80,80)
                    pcall(function() TeleportService:TeleportToPlaceInstance(game.PlaceId, foundServer.id, player) end)
                    break
                else
                    statusLabel.Text="Estado: No cumple, buscando..."
                end
            end
        end)
    end
end)
